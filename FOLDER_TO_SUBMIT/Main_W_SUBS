; Simulate time puncher
; When you see a '^' it is a comment reffering to the line above
;       
.ORIG x3000
            AND   R1, R1, #0 ; Clear R1
            AND   R2, R2, #0 ; Clear R2
            AND   R4, R4, #0 ; Clear R4
            LD    R3, CONVERT_ASC_TO_DEC ; Converts ASCII to Decimal within Register (#-48)
       
START       LEA   R0, PROMPT_START ; Load prompt for start time

            LD  R1 , GET_CHAR
            JSRR R1
            
            ST    R2, Start_HH    ;Saving Start (HH:--) after return 
            ST    R5, Start_MM    ;Saving Start (--:MM) after return 

            AND R1, R1, #0
            
            LEA   R0, PROMPT_END   ; Load prompt for end time
            
            LD  R1 , GET_CHAR
            JSRR R1
            
            ST    R2, End_HH    ;Saving End (HH:--) after return 
            ST    R5, End_MM    ;Saving End (--:MM) after return 
            
            LD  R2, Start_HH
            LD  R5, Start_MM
            LD R4, STARTCALC
            JSRR R4         
            ST    R3, STARTINMIN
            
            AND   R2, R2, #0 ; Clear
            AND   R5, R5, #0 ; Clear 
            AND   R4, R4, #0 ; Clear 
            
            LD    R2, End_HH    
            LD    R5, End_MM
            LD R4, STARTCALC
            JSRR R4         ;5
            ST    R3, ENDINMIN 
       
            AND   R4, R4, #0 ; Clear
            LD  R3, ENDINMIN
            LD  R4, STARTINMIN
            
            NOT R4, R4 
            ADD R4, R4, #1
            ADD R5, R3, R4 
            ST R5, TOTAL_DIFF_IN_MIN
            
            AND R1, R1, #0 
            AND R5, R5, #0
            AND R3, R3, #0
            AND R2, R2, #0 ; Cleared it but have to make sure we do not need it 
            LD  R1, DIVIDE_MIN_TO_HOUR ;#-60
            LD R5, TOTAL_DIFF_IN_MIN
            LD R6, MAX_BEFORE_NEG
            
DIVIDE     
            ADD R2, R5, R1 ; Check if the value is not divisible by 60 first
            BRn SKIP
            BRz CONTINUE 
            
 CONTINUE   ADD R5, R5, R1   ; Adding Total Diff with -60 until zero or negative 
            ADD R3, R3, #1 ; Adding how many times we subtrack 60 and this will be our hour 
            ADD R4, R5, R6
            BRp DIVIDE

SKIP
            ST R3, PREP_OUTPUT_HOUR ;R3 is our hour output 
            ST R5, PREP_OUTPUT_MIN ;R5 is our min output 
            
            AND R2, R2, #0 ; Clear R2
            AND R3, R3, #0 ; Clear R3
            AND R4, R4, #0 ; Clear R4 
            
            LD R1, PREP_OUTPUT_HOUR
            LD R4, PREP_TO_DISPLAY
            JSRR R4
            
            ST R1, CONVERTED_HOUR_ONES_PLACE
            ST R3, CONVERTED_HOUR_TENS_PLACE
            
            
            AND R1, R1, #0 ; Clear R1
            AND R2, R2, #0 ; Clear R2
            AND R3, R3, #0 ; Clear R3
            AND R4, R4, #0 ; Clear R4 
            
            LD R1, PREP_OUTPUT_MIN
            LD R4, PREP_TO_DISPLAY
            JSRR R4
            
            ST R1,CONVERTED_MIN_ONES_PLACE
            ST R3, CONVERTED_MIN_TENS_PLACE
            
;FINISHED_and_DISPLAYING______________________________________

LEA R0, OUTPUT
PUTS
LD R0, CONVERTED_HOUR_TENS_PLACE
OUT 
LD R0, CONVERTED_HOUR_ONES_PLACE
OUT
LD R0, COLON
OUT
LD R0, CONVERTED_MIN_TENS_PLACE 
OUT 
LD R0, CONVERTED_MIN_ONES_PLACE
OUT
LEA R0, THANK_YOU
PUTS   
   
       
EXIT        TRAP X25   ; HALT

;__SubRoutine_GET_CHAR_______________________________________________________________________
;-------------->Moved to SUB_GET_CHAR 

;_SubRoutine_STARTCALC_______________________________________________________________________
; --------------->Moved to SUB_STARTCALC
            
;_SUBROUTINE_PREP_TO_DISPLAY_____________________________________
;----------------------------->Moved to Seperate File

;_Variables________________________________________________________
CONVERT_ASC_TO_DEC  .FILL #-48
ASCII	            .FILL #48 
TEN                 .FILL  #10

START_TIME          .BLKW 2
END_TIME            .BLKW 2
PROMPT_START        .STRINGZ "Enter start time using military Time(HH:MM): "
PROMPT_END          .STRINGZ "\nEnter end time using military Time(HH:MM): "
ERRORMSG            .STRINGZ "Not a valid input"

SaveR1              .FILL   x0000
SaveR2              .FILL   x0000
SaveR3              .FILL   x0000
SaveR4              .FILL   x0000
SaveR5              .FILL   x0000
SaveR6              .FILL   x0000
Start_HH            .FILL   x0000
Start_MM            .FILL   x0000
End_HH              .FILL   x0000
End_MM              .FILL   x0000

STARTINMIN          .FILL   x0000
ENDINMIN            .FILL   x0000
TOTAL_DIFF_IN_MIN   .FILL   x0000
DIVIDE_MIN_TO_HOUR  .FILL   #-60
MAX_BEFORE_NEG      .FILL   #-59
;HOUR                .FILL   #60

;SUBROUTINES___
STARTCALC           .FILL   x4000
GET_CHAR            .FILL   x400F
PREP_TO_DISPLAY     .FILL   x4082

PREP_OUTPUT_MIN     .FILL   x0000
PREP_OUTPUT_HOUR    .FILL   x0000

CONVERTED_HOUR_TENS_PLACE   .FILL   x0000
CONVERTED_HOUR_ONES_PLACE   .FILL   x0000
CONVERTED_MIN_ONES_PLACE    .FILL   x0000
CONVERTED_MIN_TENS_PLACE    .FILL   x0000
COLON                       .FILL   x003A

nTEN 	        .FILL #-10
Max_one         .FILL #-9
TENS_DEC        .FILL x0000
ONES_DEC        .FILL x0000

OUTPUT	      	.STRINGZ "\n\n--- \nAnswer:"
THANK_YOU       .STRINGZ "\n\nTime Calculation is complete\nThank you "
            .END
